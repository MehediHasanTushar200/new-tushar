@model PurchaseListViewModel

<h2>Purchase List</h2>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>ID</th>
            <th>Invoice No</th>
            <th>Ref No</th>
            <th>Date</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var purchase in Model.Purchases)
        {
            <tr>
                <td>@purchase.Id</td>
                <td>@purchase.InvoiceNo</td>
                <td>@purchase.RefNo</td>
                <td>@purchase.Date.ToString("MMMM d, yyyy")</td>
                <td>@purchase.Status</td>
                <td>
                    <a href="/Purchase/Details/@purchase.Id" class="btn btn-sm btn-success">View</a>
                    <a href="/Purchase/Edit/@purchase.Id" class="btn btn-sm btn-primary">Edit</a>
                    <a href="/Purchase/Delete/@purchase.Id" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure?');">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    int currentPage = Model.PageNumber;
    int totalPages = Model.TotalPages;
    bool hasPreviousPage = Model.HasPreviousPage;
    bool hasNextPage = Model.HasNextPage;

    int windowSize = 10; // প্রতি উইন্ডোতে পেজ লিংকের সংখ্যা
    int currentWindowStart = ((currentPage - 1) / windowSize) * windowSize + 1;
    int currentWindowEnd = Math.Min(currentWindowStart + windowSize - 1, totalPages);
    int previousWindowStart = Math.Max(currentWindowStart - windowSize, 1);
    int nextWindowStart = currentWindowEnd + 1;
}

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">

        <li class="page-item @(hasPreviousPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1 })">Previous</a>
        </li>

        @* Previous Window « *@
        @if (currentWindowStart > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = previousWindowStart })">«</a>
            </li>
        }

        @* Windowed Page Links *@
        @for (int i = currentWindowStart; i <= currentWindowEnd; i++)
        {
            if (i == currentPage)
            {
                <li class="page-item active" aria-current="page">
                    <span class="page-link">@i</span>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }
        }

        @* Next Window » *@
        @if (currentWindowEnd < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = nextWindowStart })">»</a>
            </li>
        }

        <li class="page-item @(hasNextPage ? "" : "disabled")">
            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1 })">Next</a>
        </li>
    </ul>
</nav>

