@model List<hamko.Controllers.ReportController.GroupReportViewModel>
@{
    ViewBag.Title = "Stock Report";
    Layout = null;

    int stockSerial = 0;
    decimal totalInQty = Model.Sum(g => g.TotalQty);
    decimal totalInPrice = Model.Sum(g => g.TotalPrice);
    decimal totalInAmount = Model.Sum(g => g.TotalAmount);
    decimal totalOutQty = Model.Sum(g => g.TotalOutQty);
    decimal totalOutPrice = Model.Sum(g => g.TotalOutPrice);
    decimal totalOutAmount = Model.Sum(g => g.TotalOutAmount);
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>@ViewBag.Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .ps-4 {
            padding-left: 1.5rem !important;
        }

        .ps-5 {
            padding-left: 3rem !important;
        }

        .ps-6 {
            padding-left: 4.5rem !important;
        }

        .ps-7 {
            padding-left: 6rem !important;
        }

        .pointer {
            cursor: pointer;
        }

            .pointer:hover {
                background-color: #e6f2ff;
            }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h2 class="text-center text-primary mb-4">Stock Group Summary</h2>

        <form method="post" asp-action="Index" class="row g-3 mb-4">
            <div class="col-md-2">
                <label class="form-label">From Date</label>
                <input type="date" name="FromDate" class="form-control" required />
            </div>
            <div class="col-md-2">
                <label class="form-label">To Date</label>
                <input type="date" name="ToDate" class="form-control" required />
            </div>
            <div class="col-md-3">
                <label class="form-label">Group</label>
                <select name="GroupId" class="form-select">
                    <option value="">-- All Groups --</option>
                    @foreach (var g in ViewBag.Groups as List<hamko.Models.Group>)
                    {
                        <option value="@g.Id">@g.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Item</label>
                <select name="ItemId" class="form-select">
                    <option value="">-- All Items --</option>
                    @foreach (var i in ViewBag.Items as List<hamko.Models.Item>)
                    {
                        <option value="@i.Id">@i.Name</option>
                    }
                </select>
            </div>
            <div class="col-md-2 align-self-end">
                <button type="submit" class="btn btn-primary">Generate</button>
            </div>
        </form>

        <div class="mt-3 d-flex justify-content-between">
            <a class="btn btn-secondary" href="@Url.Action("Index", "Dashboard")">← Back</a>
            <button class="btn btn-success" onclick="printReport()">🖨️ Print</button>
        </div>

        <div id="printSection" class="table-responsive mt-3">
            <table class="table table-bordered table-hover">
                <thead class="table-success text-center">
                    <tr>
                        <th rowspan="2">Sl</th>
                        <th rowspan="2">Particular</th>
                        <th colspan="3">Stock In</th>
                        <th colspan="3">Stock Out</th>
                    </tr>
                    <tr>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="bg-info text-white fw-bold">
                        <td></td>
                        <td>Primary</td>
                        <td class="text-end">@totalInQty</td>
                        <td class="text-end">@totalInPrice.ToString("N2")</td>
                        <td class="text-end">@totalInAmount.ToString("N2")</td>
                        <td class="text-end">@totalOutQty</td>
                        <td class="text-end">@totalOutPrice.ToString("N2")</td>
                        <td class="text-end">@totalOutAmount.ToString("N2")</td>
                    </tr>

                    @foreach (var group in Model)
                    {
                        if (group.TotalQty == 0 && group.TotalOutQty == 0) continue;

                        <tr class="table-secondary fw-semibold">
                            <td></td>
                            <td class="ps-4">@group.GroupName</td>
                            <td class="text-end">@group.TotalQty</td>
                            <td class="text-end">@group.TotalPrice.ToString("N2")</td>
                            <td class="text-end">@group.TotalAmount.ToString("N2")</td>
                            <td class="text-end">@group.TotalOutQty</td>
                            <td class="text-end">@group.TotalOutPrice.ToString("N2")</td>
                            <td class="text-end">@group.TotalOutAmount.ToString("N2")</td>
                        </tr>

                        @foreach (var item in group.Items)
                        {
                            if (item.TotalQty == 0 && item.TotalOutQty == 0) continue;

                            <tr class="table-light">
                                <td></td>
                                <td class="ps-5">• @item.ItemName</td>
                                <td class="text-end">@item.TotalQty</td>
                                <td class="text-end">@item.TotalPrice.ToString("N2")</td>
                                <td class="text-end">@item.TotalAmount.ToString("N2")</td>
                                <td class="text-end">@item.TotalOutQty</td>
                                <td class="text-end">@item.TotalOutPrice.ToString("N2")</td>
                                <td class="text-end">@item.TotalOutAmount.ToString("N2")</td>
                            </tr>

                            @foreach (var product in item.Products)
                            {
                                stockSerial++;
                                <tr>
                                    <td class="text-center">@stockSerial</td>
                                    <td class="ps-6">↳ @product.ProductName</td>
                                    <td class="text-end">@product.InQty</td>
                                    <td class="text-end">@product.InPrice.ToString("N2")</td>
                                    <td class="text-end">@product.InTotal.ToString("N2")</td>
                                    <td class="text-end">@product.OutQty</td>
                                    <td class="text-end">@product.OutPrice.ToString("N2")</td>
                                    <td class="text-end">@product.OutTotal.ToString("N2")</td>
                                </tr>
                            }
                        }

                        @foreach (var sub in group.SubGroups)
                        {
                            if (sub.TotalQty == 0 && sub.TotalOutQty == 0) continue;

                            <tr class="table-warning fw-semibold">
                                <td></td>
                                <td class="ps-5">▶ @sub.GroupName</td>
                                <td class="text-end">@sub.TotalQty</td>
                                <td class="text-end">@sub.TotalPrice.ToString("N2")</td>
                                <td class="text-end">@sub.TotalAmount.ToString("N2")</td>
                                <td class="text-end">@sub.TotalOutQty</td>
                                <td class="text-end">@sub.TotalOutPrice.ToString("N2")</td>
                                <td class="text-end">@sub.TotalOutAmount.ToString("N2")</td>
                            </tr>

                            @foreach (var item in sub.Items)
                            {
                                if (item.TotalQty == 0 && item.TotalOutQty == 0) continue;

                                <tr class="table-light">
                                    <td></td>
                                    <td class="ps-6">• @item.ItemName</td>
                                    <td class="text-end">@item.TotalQty</td>
                                    <td class="text-end">@item.TotalPrice.ToString("N2")</td>
                                    <td class="text-end">@item.TotalAmount.ToString("N2")</td>
                                    <td class="text-end">@item.TotalOutQty</td>
                                    <td class="text-end">@item.TotalOutPrice.ToString("N2")</td>
                                    <td class="text-end">@item.TotalOutAmount.ToString("N2")</td>
                                </tr>

                                @foreach (var product in item.Products)
                                {
                                    stockSerial++;
                                    <tr>
                                        <td class="text-center">@stockSerial</td>
                                        <td class="ps-7">↳ @product.ProductName</td>
                                        <td class="text-end">@product.InQty</td>
                                        <td class="text-end">@product.InPrice.ToString("N2")</td>
                                        <td class="text-end">@product.InTotal.ToString("N2")</td>
                                        <td class="text-end">@product.OutQty</td>
                                        <td class="text-end">@product.OutPrice.ToString("N2")</td>
                                        <td class="text-end">@product.OutTotal.ToString("N2")</td>
                                    </tr>
                                }
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function printReport() {
            const originalContent = document.body.innerHTML;
            const printContent = document.getElementById('printSection').innerHTML;
            document.body.innerHTML = printContent;
            window.print();
            document.body.innerHTML = originalContent;
            location.reload();
        }
    </script>
</body>
</html>
